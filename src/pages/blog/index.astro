---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const posts = await getCollection('blog');
posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Get unique tags
const allTags = [...new Set(posts.flatMap(post => post.data.tags || []))].sort();

// Get the current tag from URL params
const tag = Astro.url.searchParams.get('tag');

// Filter posts by tag if one is selected
const filteredPosts = tag 
  ? posts.filter(post => post.data.tags?.includes(tag))
  : posts;
---

<Layout title="Blog">
  <div class="mb-12">
    <h1 class="text-3xl font-bold text-gray-800 dark:text-gray-100 mb-8">Blog</h1>
    
    <!-- Tags filter -->
    <div class="mb-8">
      <h2 class="text-lg font-semibold mb-4">Filter by tag:</h2>
      <div class="flex flex-wrap gap-2">
        <a
          href="/blog"
          class={`px-3 py-1 rounded-full text-sm transition-colors ${
            !tag 
              ? 'bg-primary text-white' 
              : 'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'
          }`}
        >
          All
        </a>
        {allTags.map((tagName) => (
          <a
            href={`/blog?tag=${tagName}`}
            class={`px-3 py-1 rounded-full text-sm transition-colors ${
              tag === tagName
                ? 'bg-primary text-white'
                : 'bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'
            }`}
          >
            {tagName}
          </a>
        ))}
      </div>
    </div>

    <!-- Posts grid -->
    <div class="grid gap-8 md:grid-cols-2">
      {filteredPosts.map((post) => (
        <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
          <a href={`/blog/${post.slug}`} class="block group">
            {post.data.image && (
              <div class="aspect-video overflow-hidden">
                <img
                  src={post.data.image}
                  alt={post.data.title}
                  class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-200"
                />
              </div>
            )}
            <div class="p-6">
              <h2 class="text-xl font-bold text-gray-800 dark:text-gray-100 group-hover:text-primary transition-colors">
                {post.data.title}
              </h2>
              <time class="text-sm text-gray-500 mt-1 block">
                {post.data.pubDate.toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}
              </time>
              <p class="text-gray-600 dark:text-gray-300 mt-2">
                {post.data.description}
              </p>
              {post.data.tags && (
                <div class="mt-4 flex flex-wrap gap-2">
                  {post.data.tags.map((tag) => (
                    <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded-md text-sm">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </a>
        </article>
      ))}
    </div>

    {filteredPosts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-lg text-gray-600 dark:text-gray-400">
          No posts found {tag ? `with tag "${tag}"` : ''}.
        </p>
      </div>
    )}
  </div>
</Layout>